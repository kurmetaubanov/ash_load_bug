defmodule AshLoadBug.Repo.Migrations.AddResources do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
    end

    create table(:places, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
    end

    create table(:employees, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "employees_user_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create table(:employee_places, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :employee_id,
          references(:employees,
            column: :id,
            name: "employee_places_employee_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :place_id,
          references(:places,
            column: :id,
            name: "employee_places_place_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:employee_places, "employee_places_employee_id_fkey")

    drop constraint(:employee_places, "employee_places_place_id_fkey")

    drop table(:employee_places)

    drop constraint(:employees, "employees_user_id_fkey")

    drop table(:employees)

    drop table(:places)

    drop table(:users)
  end
end
